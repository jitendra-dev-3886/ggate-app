!(function (n) {
    "use strict";
    var t = function () {};
    (t.prototype.initTooltipPlugin = function () {
        n.fn.tooltip && n('[data-toggle="tooltip"]').tooltip();
    }),
        (t.prototype.initPopoverPlugin = function () {
            n.fn.popover && n('[data-toggle="popover"]').popover();
        }),
        (t.prototype.initSlimScrollPlugin = function () {
            n.fn.slimScroll && n(".slimscroll").slimScroll({ height: "auto", position: "right", size: "8px", touchScrollStep: 20, color: "#9ea5ab" });
        }),
        (t.prototype.initFormValidation = function () {
            n(".needs-validation").on("submit", function (t) {
                return n(this).addClass("was-validated"), !1 !== n(this)[0].checkValidity() || (t.preventDefault(), t.stopPropagation(), !1);
            });
        }),
        (t.prototype.initCustomModalPlugin = function () {
            n('[data-plugin="custommodal"]').on("click", function (t) {
                t.preventDefault(), new Custombox.modal({ content: { target: n(this).attr("href"), effect: n(this).attr("data-animation") }, overlay: { color: n(this).attr("data-overlayColor") } }).open();
            });
        }),
        (t.prototype.initCounterUp = function () {
            n(this).attr("data-delay") && n(this).attr("data-delay"), n(this).attr("data-time") && n(this).attr("data-time");
            n('[data-plugin="counterup"]').each(function (t, e) {
                n(this).counterUp({ delay: 100, time: 1200 });
            });
        }),
        (t.prototype.initPeityCharts = function () {
            n('[data-plugin="peity-pie"]').each(function (t, e) {
                var i = n(this).attr("data-colors") ? n(this).attr("data-colors").split(",") : [],
                    a = n(this).attr("data-width") ? n(this).attr("data-width") : 20,
                    o = n(this).attr("data-height") ? n(this).attr("data-height") : 20;
                n(this).peity("pie", { fill: i, width: a, height: o });
            }),
                n('[data-plugin="peity-donut"]').each(function (t, e) {
                    var i = n(this).attr("data-colors") ? n(this).attr("data-colors").split(",") : [],
                        a = n(this).attr("data-width") ? n(this).attr("data-width") : 20,
                        o = n(this).attr("data-height") ? n(this).attr("data-height") : 20;
                    n(this).peity("donut", { fill: i, width: a, height: o });
                }),
                n('[data-plugin="peity-donut-alt"]').each(function (t, e) {
                    n(this).peity("donut");
                }),
                n('[data-plugin="peity-line"]').each(function (t, e) {
                    n(this).peity("line", n(this).data());
                }),
                n('[data-plugin="peity-bar"]').each(function (t, e) {
                    var i = n(this).attr("data-colors") ? n(this).attr("data-colors").split(",") : [],
                        a = n(this).attr("data-width") ? n(this).attr("data-width") : 20,
                        o = n(this).attr("data-height") ? n(this).attr("data-height") : 20;
                    n(this).peity("bar", { fill: i, width: a, height: o });
                });
        }),
        (t.prototype.initKnob = function () {
            n('[data-plugin="knob"]').each(function (t, e) {
                n(this).knob();
            });
        }),
        (t.prototype.init = function () {
            this.initTooltipPlugin(), this.initPopoverPlugin(), this.initSlimScrollPlugin(), this.initFormValidation(), this.initCustomModalPlugin(), this.initCounterUp(), this.initPeityCharts(), this.initKnob();
        }),
        (n.Components = new t()),
        (n.Components.Constructor = t);
})(window.jQuery),
    (function (e) {
        "use strict";
        var t = function () {
            (this.$bootstrapStylesheet = e("#bootstrap-stylesheet")),
                (this.$appStylesheet = e("#app-stylesheet")),
                (this.$originalBSStylesheet = e("#bootstrap-stylesheet").attr("href")),
                (this.$originalAppStylesheet = e("#app-stylesheet").attr("href"));
        };
        (t.prototype.init = function () {
            var t = this;
            e("#light-mode-switch").on("change", function () {
                this.checked &&
                    (t.$bootstrapStylesheet.attr("href", t.$originalBSStylesheet),
                    t.$appStylesheet.attr("href", t.$originalAppStylesheet),
                    e("#dark-mode-switch").prop("checked", !1),
                    e("#rtl-mode-switch").prop("checked", !1),
                    e("#dark-rtl-mode-switch").prop("checked", !1));
            }),
                e("#dark-mode-switch").on("change", function () {
                    this.checked &&
                        (t.$bootstrapStylesheet.attr("href", e(this).data("bsstyle")),
                        t.$appStylesheet.attr("href", e(this).data("appstyle")),
                        e("#light-mode-switch").prop("checked", !1),
                        e("#rtl-mode-switch").prop("checked", !1),
                        e("#dark-rtl-mode-switch").prop("checked", !1));
                }),
                e("#rtl-mode-switch").on("change", function () {
                    this.checked &&
                        (t.$bootstrapStylesheet.attr("href", t.$originalBSStylesheet),
                        t.$appStylesheet.attr("href", e(this).data("appstyle")),
                        e("#light-mode-switch").prop("checked", !1),
                        e("#dark-mode-switch").prop("checked", !1),
                        e("#dark-rtl-mode-switch").prop("checked", !1));
                }),
                e("#dark-rtl-mode-switch").on("change", function () {
                    this.checked &&
                        (t.$bootstrapStylesheet.attr("href", e(this).data("bsstyle")),
                        t.$appStylesheet.attr("href", e(this).data("appstyle")),
                        e("#light-mode-switch").prop("checked", !1),
                        e("#rtl-mode-switch").prop("checked", !1),
                        e("#dark-mode-switch").prop("checked", !1));
                });
        }),
            (e.RightSidebar = new t()),
            (e.RightSidebar.Constructor = t);
    })(window.jQuery),
    (function (i) {
        "use strict";
        var t = function () {
            (this.$body = i("body")), (this.$window = i(window));
        };
        (t.prototype._resetSidebarScroll = function () {
            i(".slimscroll-menu").slimscroll({ height: "auto", position: "right", size: "8px", color: "#9ea5ab", wheelStep: 5, touchScrollStep: 20 });
        }),
            (t.prototype.initMenu = function () {
                var e = this;
                i(".button-menu-mobile").on("click", function (t) {
                    t.preventDefault(), e.$body.toggleClass("sidebar-enable"), 768 <= e.$window.width() ? e.$body.toggleClass("enlarged") : e.$body.removeClass("enlarged"), e._resetSidebarScroll();
                }),
                    i("#side-menu").metisMenu(),
                    e._resetSidebarScroll(),
                    i(".right-bar-toggle").on("click", function (t) {
                        i("body").toggleClass("right-bar-enabled");
                    }),
                    i(document).on("click", "body", function (t) {
                        0 < i(t.target).closest(".right-bar-toggle, .right-bar").length ||
                            0 < i(t.target).closest(".left-side-menu, .side-nav").length ||
                            i(t.target).hasClass("button-menu-mobile") ||
                            0 < i(t.target).closest(".button-menu-mobile").length ||
                            (i("body").removeClass("right-bar-enabled"), i("body").removeClass("sidebar-enable"));
                    }),
                    i("#side-menu a").each(function () {
                        var t = window.location.href.split(/[?#]/)[0];
                        this.href == t &&
                            (i(this).addClass("active"),
                            i(this).parent().addClass("mm-active"),
                            i(this).parent().parent().addClass("mm-show"),
                            i(this).parent().parent().prev().addClass("active"),
                            i(this).parent().parent().parent().addClass("mm-active"),
                            i(this).parent().parent().parent().parent().addClass("mm-show"),
                            i(this).parent().parent().parent().parent().parent().addClass("mm-active"));
                    }),
                    i(".navigation-menu a").each(function () {
                        var t = window.location.href.split(/[?#]/)[0];
                        this.href == t &&
                            (i(this).addClass("active"),
                            i(this).parent().addClass("active"),
                            i(this).parent().parent().addClass("in"),
                            i(this).parent().parent().prev().addClass("active"),
                            i(this).parent().parent().parent().addClass("active"),
                            i(this).parent().parent().parent().parent().addClass("in"),
                            i(this).parent().parent().parent().parent().parent().addClass("active"));
                    }),
                    i(".navbar-toggle").on("click", function (t) {
                        i(this).toggleClass("open"), i("#navigation").slideToggle(400);
                    }),
                    i(".navigation-menu>li").slice(-2).addClass("last-elements"),
                    i('.navigation-menu li.has-submenu a[href="#"]').on("click", function (t) {
                        i(window).width() < 992 && (t.preventDefault(), i(this).parent("li").toggleClass("open").find(".submenu:first").toggleClass("open"));
                    });
            }),
            (t.prototype.initLayout = function () {
                768 <= this.$window.width() && this.$window.width() <= 1024 ? this.$body.addClass("enlarged") : 1 != this.$body.data("keep-enlarged") && this.$body.removeClass("enlarged");
            }),
            (t.prototype.init = function () {
                var e = this;
                this.initLayout(),
                    this.initMenu(),
                    i.Components.init(),
                    i.RightSidebar.init(),
                    e.$window.on("resize", function (t) {
                        t.preventDefault(), e.initLayout(), e._resetSidebarScroll();
                    });
            }),
            (i.App = new t()),
            (i.App.Constructor = t);
    })(window.jQuery),
    (function (t) {
        "use strict";
        window.jQuery.App.init();
    })(),
    Waves.init();

// Custom CMS Javascripts

	/* Function to validate image file and preivew */
	$(function(){
		$(".fileupload").change(function () {
			if(fileExtValidate(this)) {
				 if(fileSizeValidate(this)) {
					showImg(this);
				 }	 
			}    
		});

		// File extension validation, Add more extension you want to allow
		
		function fileExtValidate(fdata) {
			var validExt = ".png, .gif, .jpeg, .jpg";
			var filePath = fdata.value;
			var getFileExt = filePath.substring(filePath.lastIndexOf('.') + 1).toLowerCase();
			var pos = validExt.indexOf(getFileExt);
			if(pos < 0) {
				alert("This file is not allowed, please upload valid file.");
				fdata.value = "";
				$('.previewImage').hide().html('<h3>Preview<br><br>Image</h3>').fadeIn();
				return false;
			}else{
				return true;
			}
		}

		// file size validation
		// size in kb
		var maxSize = '1024';
		function fileSizeValidate(fdata) {
			if (fdata.files && fdata.files[0]) {
				var fsize = fdata.files[0].size/1024;
				if(fsize > maxSize) {
					alert('Maximum file size exceed, This file size is: ' + fsize + "KB");
					fdata.value = "";
					$('.previewImage').hide().html('<h3>Preview<br><br>Image</h3>').fadeIn();
					return false;
				} else {
					return true;
				}
			}
		}

		// display img preview before upload.
		function showImg(fdata) {
			if (fdata.files && fdata.files[0]) {
				var reader = new FileReader();
				reader.onload = function (e) {
					var previewImage = '<img src="'+e.target.result+'" class="img-responsive" height="120" alt="Preview Image">';
					$('.previewImage').hide().html(previewImage).fadeIn();
				}
				reader.readAsDataURL(fdata.files[0]);
			}
		}
		
		/* Project Helper JS */
		function callAjax(elementID,PageUrl){
			var http = false;
			if(navigator.appName == "Microsoft Internet Explorer") {
			  http = new ActiveXObject("Microsoft.XMLHTTP");
			} else {
			  http = new XMLHttpRequest();
			}

			http.abort();
			http.open("GET", PageUrl, true);
			http.onreadystatechange=function() {
				if(http.readyState == 4) {
					var loadcontent = http.responseText;
					var elementToLoad = "#"+elementID;
				  if(http.responseText == "incorrect"){
						$(elementToLoad).text("Error!!!");
						//document.getElementById("save").disabled = true;
				  }else{
						$(elementToLoad).html(loadcontent).hide().show('slow');
						//document.getElementById("save").disabled = false;
				  }
				}
			}
			http.send(null);
			
		}

		function callAjaxContent(PageUrl){
			var http = false;
			var loadcontent = "";

				if(navigator.appName == "Microsoft Internet Explorer") {
				  http = new ActiveXObject("Microsoft.XMLHTTP");
				} else {
				  http = new XMLHttpRequest();
				}

				http.open("GET", PageUrl, false);
				http.send(null);
			
			if (http.status === 200) {
				loadcontent = http.responseText;
			}
			else {
				loadcontent = "Request Failed..";
			}

			return loadcontent;
		}
	});

	// Clone Object Function
	function cloneObject(sourceId){
		var $template = $('#'+sourceId);
        $template.clone().removeClass('hide').addClass('cloneObj').removeAttr('id').insertBefore($template).fadeIn();
	}

	/* General Utility jQuery Functions */
	$(document).ready(function(){
		
		/* Function to display CRUD Message */
		if($("#frmMessage").length > 0){
			$('#frmMessage').modal('show');
			$('#frmMessage').on('hidden.bs.modal', function (e) {
				var reloadUrl = $(this).attr("data-reload-url");
				if(reloadUrl == '#'){
					
				}else{
					window.location.href = reloadUrl;
				}
			});
		}
		// Function to Get back to previous page
		$('button.back').click(function(){
			var backUrl = $(this).attr('data-url');
			if(backUrl.length > 0){
				window.location.href = backUrl;
				return false;
			}else{
				parent.history.back();
				return false;
			}
		});
		// For Select2 Box
		if ($(".aselectbox").length > 0){
			$(".aselectbox").selectpicker({
				placeholder: "Please Select"
			});
		}
		
		
		// For Multiple Selection
		if ($("#selectall").length > 0){
			$("#selectall").change(function(){
				$('.case').not(this).prop('checked', this.checked);
			});
		}
		if ($(".case").length > 0){
			$(".case").change(function(){
				if($(".case").length == $(".case:checked").length) {
					$("#selectall").prop("checked", "checked");
				} else {
					$("#selectall").removeAttr("checked");
				}
		 
			}); 
		}
		// For Multiple Selection Delete
		if ($("#deleteMultiple").length > 0){
			$('#deleteMultiple').click(function(){
				var count = $('input:checkbox:checked').length;
				if(count == 0){
					alert("Please select the record which you want to Delete.");
					return false;
				}
				else{
					var result = confirm("Are You Sure to delete selected data ? ");
					if (result == true) 
					{	
						  var delIDarray = [];
						  $('.case').each(function(){
								var ar = this.id;
								var selectval = $('#'+ar).is(':checked');
								if(selectval){
									delIDarray.push(ar);
								}
						  });
						var finalDelArray = delIDarray.join(',');
						var loc = $(this).attr('data-del-url');
						var keyFld = $(this).attr('data-key-field');
						loc = loc + '&'+keyFld+'=' + finalDelArray;
						window.location.assign(loc);
					}
					else 
					{
						// nothing to do
					}
				}
			});     
		}
		
		// For Multiple Reward Selection
		if ($(".ca").length > 0){
			$(".ca").click(function(){
				var tochk = $(this).attr('data-status').toLowerCase();
				$("#"+tochk).find(':checkbox').prop('checked', true);
			});
		}
		if ($(".ua").length > 0){
			$(".ua").click(function(){
				var tochk = $(this).attr('data-status').toLowerCase();
				$("#"+tochk).find(':checkbox').prop('checked', false);
			});
		}
				
		// For Date Calendar
        $(function() {
			$('.eventDate').flatpickr({
				enableTime: false,
				dateFormat: "Y-m-d",
			});
		});
		
		// For Datetime Calendar
        $(function() {
			$('.eventDateTime').flatpickr({
				enableTime: true,
				dateFormat: "Y-m-d H:i",
			});
		});    
		
		// For Quick Form Show or Hide
		if ($(".addButton").length > 0){
			$(document).on('click', '.addButton', function() { 
				$(this).fadeOut();
				if($(this).data("target-form") != 'undefined'){
					var targetDiv = "#"+$(this).data("target-form");
					$('div.quickForm').removeClass('hide').fadeIn(); //cloneObject('optionTemplate');
				}else{
					$('div.quickForm').removeClass('hide').show(); //cloneObject('optionTemplate');
				}
				
					 
			});
		}
		if ($("button.removeButton").length > 0){
			$(document).on('click','.removeButton', function() {
				$('.addButton').fadeIn();
				$(this).closest('div.quickForm').hide();
			});
		}
		
		if ($(".removeClone").length > 0){
			$(document).on('click','.removeClone', function() {
				$(this).closest('div.cloneObj').remove();
			});
		}
		
		if ($(".pageReload").length > 0){
			$(document).on('click','.pageReload', function(e){
				e.preventDefault();
				window.location.reload();
			});
		}
		
		// Initiate TinyMCE Editor
		if ($("textarea.aeditor").length > 0){
			tinymce.init({
				selector: "textarea.aeditor", theme: "modern", height: 250,
				relative_urls : false,
				remove_script_host : false,
				convert_urls : true,
				content_css : "/theme/default/assets/css/style.css?v=1.0.1",
				plugins: [
					 "advlist autolink link image lists charmap print preview hr anchor pagebreak",
					 "searchreplace wordcount visualblocks visualchars insertdatetime media nonbreaking",
					 "table contextmenu directionality emoticons paste textcolor responsivefilemanager code fullscreen"
				],
				toolbar1: "undo redo | bold italic underline | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | styleselect",
				toolbar2: "| responsivefilemanager | link unlink anchor | image media | forecolor backcolor  | print preview code ",
				image_advtab: true 
			});
		}
		
		// User Form Validation
		if ($("#userform").length > 0){
			$('#saveUser').on('click', function(e){
				e.preventDefault();
				var error = 0;
				var loginID = $('#loginID').val();
				$.getJSON("ajax/checkLoginID.php?loginID="+loginID, function(data) {
					if(data.valid == 1){
						$('#userform').submit();
					}else{
						$('#loginID').closest("div.form-group").addClass('has-error');
						$('#loginID').focus();
						$('.with-errors').hide().html(data.msg).fadeIn();
						alert("Not valid..");
					}
				});
			});
		}
		
		// Bind Target Box
		if($(".bindbox").length > 0){
			$(document).on('change','.bindbox',function(){
				var targetBox = $(this).data('target-list');
				if (typeof targetBox !== typeof undefined && targetBox !== false && $('#'+targetBox).length > 0) {
					var targetBoxDefault = $(this).data('target-title');
					var sourceFld = $(this).attr('id');
					var selectedOption = $(this).val();
					var ajaxUrl = $(this).data('target-url');
					$.ajax({
						url: ajaxUrl+'?'+sourceFld+'='+selectedOption,
						cache: false,
						type: "GET",
						success: function (data) {
							$('#'+targetBox).html(data).fadeIn();
							$('#'+targetBox).focus();
						},
						error: function (reponse) {
							alert("error : " + reponse);
						}
					});
				}
			});
		}
	});
